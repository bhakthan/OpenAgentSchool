AgentInstructionDesign Explanation
--------------------------------------------------------------------------------

Beginner Explanation
--------------------------------------------------------------------------------
Welcome to Agent Instruction Design. This page is about the best way to give instructions to an AI agent. If you give vague instructions, you might get a vague or unhelpful answer. This page teaches you how to be clear and specific. A key idea is the "Instruction Hierarchy," which is about telling the agent what's most important. For example, you might tell it that being accurate is more important than being concise. This helps the agent make the right decision if your instructions seem to conflict.

--------------------------------------------------------------------------------
Intermediate Explanation
--------------------------------------------------------------------------------
This page focuses on the art of crafting effective instructions for AI agents. The "Instruction Hierarchy Design" section shows the difference between an unclear set of instructions and a clear, prioritized list that helps the agent resolve conflicts. The "Steerability and Control" section is interactive; you can click between "Low," "Medium," and "High" control to see how the level of detail in your instructions dramatically changes the predictability of the agent's output. The "Verbosity Control" section has a slider that lets you see how you can ask the agent for different levels of detail, from a minimal, command-only response to a verbose, comprehensive explanation.

--------------------------------------------------------------------------------
Advanced Explanation
--------------------------------------------------------------------------------
Agent Instruction Design is a form of programmatic prompt engineering that aims to constrain the behavior of an LLM for reliable and predictable outcomes. An "Instruction Hierarchy" is a key technique where directives are prioritized, often numerically, to resolve potential conflicts (e.g., "1. Adhere to all safety constraints. 2. Produce factually accurate output. 3. Be concise."). "Steerability" is controlled by the level of abstraction in the instructions; high-level goals grant more autonomy, while low-level, procedural instructions increase predictability. "Verbosity Control" is implemented by explicitly defining the desired output format, such as specifying a JSON schema or requesting a response containing only the final command. Advanced techniques involve creating a "meta-prompt" that instructs the agent on how to interpret and execute the primary prompt, including defining fallback procedures for errors and criteria for self-validation before returning a response.

