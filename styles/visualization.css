/**
 * Visualization styles for React Flow and data flow animations
 */

/* Enhanced ReactFlow element stability */
.react-flow,
.react-flow__container,
.react-flow__viewport,
.react-flow__renderer,
[data-reactflow] {
  transform: translateZ(0);
  will-change: transform;
  backface-visibility: hidden;
  -webkit-backface-visibility: hidden;
  contain: layout;
}

/* Ensure sane minimums to prevent size bugs */
.react-flow {
  min-height: 200px;
  min-width: 200px;
  contain: strict;
  z-index: 0;
  width: 100% !important;
  height: 100% !important;
}

/* Force container dimensions for ACP Demo specifically */
.react-flow__container {
  width: 100% !important;
  height: 100% !important;
}

/* Force viewport dimensions */
.react-flow__viewport {
  width: 100% !important;
  height: 100% !important;
}

/* Force renderer dimensions */
.react-flow__renderer {
  width: 100% !important;
  height: 100% !important;
}

/* Optimize animations to reduce jank */
.react-flow__edge-path {
  will-change: transform;
  contain: strict;
  stroke-width: 1.5px !important;
  opacity: 1 !important;
  visibility: visible !important;
}

/* Enhanced visualization container for data transforms */
.transform-visualization {
  position: relative;
  overflow: hidden;
  transform: translateZ(0);
  contain: layout size;
}

/* Transformation effects */
.transform-effect {
  filter: drop-shadow(0 0 2px rgba(0, 120, 255, 0.5));
  transition: all 0.3s ease;
  contain: layout style;
}

/* Ensure tooltips appear above SVG elements */
[role="tooltip"] {
  z-index: 100;
}

/* Ensure all flow nodes are visible with minimum dimensions */
.react-flow__node {
  min-width: 50px;
  min-height: 30px;
  contain: layout style;
  opacity: 1 !important;
  visibility: visible !important;
  display: block !important;
  z-index: 1;
}

/* Prevent layout shifts during animation */
.react-flow__edges {
  pointer-events: none;
  contain: layout style;
}

/* Ensure edges are always visible */
.react-flow__edge {
  opacity: 1 !important;
  visibility: visible !important;
}

/* Stable container for flow visualizations */
.optimized-flow-container {
  transform: translateZ(0);
  backface-visibility: hidden;
  -webkit-backface-visibility: hidden;
  contain: layout;
  transform-style: preserve-3d;
}

/* Stable node dragging */
.react-flow__node.dragging {
  z-index: 1000;
}

/* Better animation quality for data flow */
.flow-indicator {
  filter: drop-shadow(0 0 2px rgba(0, 0, 0, 0.2));
  will-change: transform;
}

/* Enhanced dark mode styling */
.dark .react-flow__edge-path {
  stroke: rgba(255, 255, 255, 0.5);
}

.dark .react-flow__controls {
  background-color: var(--card);
  border-color: var(--border);
}

.dark .react-flow__controls button {
  background-color: var(--card);
  border-color: var(--border);
  color: var(--foreground);
}

.dark .react-flow__controls button:hover {
  background-color: var(--muted);
}

.dark .flow-indicator {
  filter: drop-shadow(0px 0px 2px rgba(0, 0, 0, 0.8));
}

/* Consistent node appearance */
.agent-node {
  padding: 10px;
  border-radius: var(--radius);
  font-size: 14px;
  width: 150px;
  text-align: center;
  border: 1px solid var(--border);
  background-color: var(--card);
  color: var(--card-foreground);
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  transition: all 0.2s ease;
}

.agent-node:hover {
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15);
}

.agent-node.selected, 
.agent-node.active {
  box-shadow: 0 0 0 2px var(--primary);
}