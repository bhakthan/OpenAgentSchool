name: Deploy Verification

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  verify-spa-routing:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository (manual clone - no external actions)
      run: |
        git clone --depth=1 "${{ github.server_url }}/${{ github.repository }}.git" .
        git checkout "${{ github.sha }}"

    - name: Install Node.js 18 (manual - no marketplace actions)
      run: |
        curl -fsSL https://deb.nodesource.com/setup_18.x | sudo -E bash -
        sudo apt-get install -y nodejs
        node -v
        npm -v
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build project
      run: npm run build
      
    - name: Verify SPA routing configuration
      run: npm run verify-routing

    - name: Generate integrity checksums for critical bundles
      run: |
        set -euo pipefail
        echo "🔐 Generating SHA256 checksums for key bundles" 
        echo "# SHA256 checksums" > dist/integrity-checksums.txt
        echo "generated: $(date -u +%Y-%m-%dT%H:%M:%SZ)" >> dist/integrity-checksums.txt
        echo "" >> dist/integrity-checksums.txt
        # Collect target bundle patterns (entry + major vendor/feature chunks)
        TARGETS="dist/assets/index-*.js dist/assets/vendor-*.js dist/assets/visualizations-*.js dist/assets/study-mode-*.js"
        found_any=false
        for pattern in $TARGETS; do
          for file in $pattern; do
            if [ -f "$file" ]; then
              if [ "$found_any" = false ]; then found_any=true; fi
              sha256sum "$file" >> dist/integrity-checksums.txt
            fi
          done
        done
        if [ "$found_any" = false ]; then
          echo "❌ No matching asset bundles found for checksum generation" >&2
          exit 1
        fi
        echo "" >> dist/integrity-checksums.txt
        echo "# Subresource Integrity (SRI) base64 hashes" >> dist/integrity-checksums.txt
        for pattern in $TARGETS; do
          for file in $pattern; do
            if [ -f "$file" ]; then
              HASH=$(openssl dgst -sha256 -binary "$file" | openssl base64 -A)
              echo "$(basename "$file"): sha256-$HASH" >> dist/integrity-checksums.txt
            fi
          done
        done
        echo "✅ Checksums generated:" 
        cat dist/integrity-checksums.txt
      
    - name: Test that key routes exist in built index.html
      run: |
        # Check if the built index.html contains the necessary elements
        if ! grep -q "id=\"root\"" dist/index.html; then
          echo "❌ React root element not found in index.html"
          exit 1
        fi
        # After introducing manual chunk splitting, the main entry file is now named index-<hash>.js
        # Adapt verification to match the hashed Vite entry pattern instead of legacy main.js naming.
        if ! grep -E '/assets/index-[A-Za-z0-9_.-]+\.js' dist/index.html; then
          echo "❌ Hashed Vite entry bundle (index-<hash>.js) not found in index.html"
          echo "Contents of first 40 lines for debugging:" 
          head -n 40 dist/index.html
          exit 1
        fi
        
        echo "✅ Built index.html looks good"
        
    - name: Verify _redirects file was copied to dist
      run: |
        if [ ! -f "dist/_redirects" ]; then
          echo "❌ _redirects file not found in dist folder"
          exit 1
        fi
        
        echo "✅ _redirects file copied correctly"
        
    - name: List dist contents for debugging
      run: |
        echo "📁 Contents of dist folder:"
        ls -la dist/
        echo ""
        echo "📄 _redirects content:"
        cat dist/_redirects
