AgentLifecycleVisual Explanation
--------------------------------------------------------------------------------

Beginner Explanation
--------------------------------------------------------------------------------
This page shows you the "lifecycle" of an AI agent as it works on a task. Think of it as the agent's thought process, shown as a looping cycle. When you press "Play," you'll see the agent move through eight steps. It starts by receiving your "Input," then it "Analyzes" the task, makes a "Plan," and so on, until it gives a "Response" and "Learns" from the experience. This cycle repeats, allowing the agent to continuously improve.

--------------------------------------------------------------------------------
Intermediate Explanation
--------------------------------------------------------------------------------
This is an interactive visualization of an agent's cognitive cycle. The animation shows the eight key stages of task processing, from "Input Received" to "Learning." You can press "Play" to watch the cycle animate. A key feature here is the micro-learning pop-up, which you can open by clicking the question mark icon on any step. This pop-up gives you a more detailed explanation of that specific stage, with different levels of detail for beginner, intermediate, and advanced users, including code examples. Notice that the cycle loops from "Learning" back to "Task Analysis," representing how the agent's past experiences inform its future actions.

--------------------------------------------------------------------------------
Advanced Explanation
--------------------------------------------------------------------------------
This `AgentLifecycleVisual` is a React component that uses an SVG to create a dynamic, animated visualization of an agent's decision-making loop. The animation is controlled by `useState` and `useEffect` hooks that cycle through the `currentStep`. The connections between the steps are drawn as curved SVG paths. The component's most significant feature is the `microLearningContent` object, which is a nested data structure containing tiered explanations and code examples for each of the eight lifecycle stages. The content displayed in the modal is dynamically selected based on the `activeMicroLesson` and `userKnowledgeLevel` state variables, making this a highly interactive and adaptive educational tool.
